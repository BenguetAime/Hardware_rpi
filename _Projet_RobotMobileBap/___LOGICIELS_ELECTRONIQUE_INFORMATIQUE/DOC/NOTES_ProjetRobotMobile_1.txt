
##############  22/10/2024  ##############
>> Installation des exécutables (binaries):
install(TARGETS my_node
        DESTINATION lib/${PROJECT_NAME}) 
si vous avez des nœuds ROS écrits en C++ 

>> Installation des scripts Python
install(PROGRAMS
  scripts/my_python_script.py
  DESTINATION lib/${PROJECT_NAME}
)

>> Installation des fichiers de configuration ou de ressources
install(DIRECTORY launch config
        DESTINATION share/${PROJECT_NAME})

>> Installation des bibliothèques :
Si vous avez développé une bibliothèque dans votre package, vous devez spécifier où cette bibliothèque doit être installée.
install(TARGETS my_library
        ARCHIVE DESTINATION lib
        LIBRARY DESTINATION lib
        RUNTIME DESTINATION bin)



__________________ ROS 2 ROS 2  __________________
>> ros2 launch my_pkg file.launch.py
>> ros2 launch gazebo_ros gazebo.launch.py
>> ros2 run gazebo_ros spawn_entity.py -topic robot_description -entity myRobot

>> INSTALLER "xacro"?
	sudo apt install ros-humble-xacro
>>
colcon build --packages-select my_package

>> ros2 run tf2_tools view_frames : visualiser les repères (un fichier est créé dans le WS)
>>ros2 param get /robot_state_publisher robot_description

_____CmakeLists/Package.xml :
>> pas besoin de "joint_state_publisher" (n'existe pas comme dépendance); juste

__dans un fichier launch :
Les nœuds robot_state_publisher; joint_state_publisher ??

!!!__ DANS RVIZ : en faisant "ADD/ ROBOT MODEL" : écrire dans l'interface "ROBOT ODEL/ Descriptio Topic": /robot_description;
